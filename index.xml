<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Mateusz Pieniak</title><link>https://elkotito.github.io/</link><description>Recent content on Mateusz Pieniak</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 19 May 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://elkotito.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Reinforcement Learning 101</title><link>https://elkotito.github.io/posts/reinforcement-learning-101/</link><pubDate>Mon, 19 May 2025 00:00:00 +0000</pubDate><guid>https://elkotito.github.io/posts/reinforcement-learning-101/</guid><description>&lt;h1 id="introduction">Introduction&lt;/h1>
&lt;p>Imagine playing a computer game. In such a game you observe the screen and based on what you see on the screen you make a decision.
With each decision you either get some points or not. Making a decision changes what you see on the screen.
The same process we could describe in a more abstract mathematical language. In such a formal language, you are the agent.&lt;/p>
&lt;ul>
&lt;li>You observe a state of the environment $s_t$ given a timestamp $t$.&lt;/li>
&lt;li>You execute an action $a_t$ by following your policy function $\pi$.&lt;/li>
&lt;li>You get a reward $r_t$.&lt;/li>
&lt;li>The environment transitions to a new state $s_{t+1}$.&lt;/li>
&lt;/ul>
&lt;p>The goal of reinforcement learning is to find an optimal policy function $\pi^*$ that maximizes the total future rewards $G_t$. In other words, you want to find actions that let you get as many points as possible in the game.&lt;/p></description></item><item><title>Search</title><link>https://elkotito.github.io/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://elkotito.github.io/search/</guid><description/></item></channel></rss>